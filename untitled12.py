# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12erf_6K_vL3wNdg7zvLXVeiGQWpG_gY2
"""

import seaborn as sns

# Compute accuracy scores
accuracy_gnb = accuracy_score(y_test, y_pred_gnb)
accuracy_mnb = accuracy_score(y_test, y_pred_mnb)

# Plot accuracy comparison
plt.figure(figsize=(8, 5))
plt.bar(["Gaussian Naïve Bayes", "Multinomial Naïve Bayes"], [accuracy_gnb, accuracy_mnb], color=['blue', 'red'])
plt.ylabel("Accuracy")
plt.title("Accuracy Comparison: GaussianNB vs. MultinomialNB")
plt.ylim(0, 1)
plt.show()

# Plot confusion matrices
fig, axes = plt.subplots(1, 2, figsize=(12, 5))

# Gaussian Naïve Bayes Confusion Matrix
sns.heatmap(confusion_matrix(y_test, y_pred_gnb), annot=True, fmt="d", cmap="Blues", ax=axes[0])
axes[0].set_title("Gaussian Naïve Bayes Confusion Matrix")
axes[0].set_xlabel("Predicted")
axes[0].set_ylabel("Actual")

# Multinomial Naïve Bayes Confusion Matrix
sns.heatmap(confusion_matrix(y_test, y_pred_mnb), annot=True, fmt="d", cmap="Reds", ax=axes[1])
axes[1].set_title("Multinomial Naïve Bayes Confusion Matrix")
axes[1].set_xlabel("Predicted")
axes[1].set_ylabel("Actual")

plt.tight_layout()
plt.show()